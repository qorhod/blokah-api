// models/subscriptionPackage.js
// ุณูููุฉ ูุณุชููุฉ ุชุญูุธ ยซุงูุจุงูุฉ + ุงูุฏููููยป ูุชุฑุจุทูุง ุจุงููุณุชุฎุฏู

const mongoose = require('mongoose');

const subscriptionPackageSchema = new mongoose.Schema(
  {
    /*--------------------------------------------------
      ๐ user
      ูุนุฑูู ุงููุณุชุฎุฏู (User._id) ุตุงุญุจ ูุฐู ุงูุจุงูุฉ.
      - ObjectId ูุฃููุง ูุฑุจุทู ุจููุฏูู ุขุฎุฑ.
      - ref:'User' ูุณูุญ ููุง ุจุงุณุชุฎุฏุงู populate().
    --------------------------------------------------*/
    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },

    /*--------------------------------------------------
      ๐ฆ subscription
      ูุงุฆู ูุตู ุชูุงุตูู ุงูุงุดุชุฑุงู ุงููุงูู ูุงูุฒููู.
    --------------------------------------------------*/
    subscription: {
      /* ุงูุฎุทุฉ: ูุตู ุณููู ุฃู ุณููู */
      plan: { type: String, enum: ['half_year', 'year'], required: true },

      /* ุงูุณุนุฑ ุงูุฅุฌูุงูู ููุจุงูุฉ (ุฑูุงู) */
      price: { type: Number, required: true },

      /* ุชุงุฑูุฎ ุชูุนูู ุงูุจุงูุฉ ูุนูููุง */
      startDate: { type: Date, default: Date.now },

      /* ุชุงุฑูุฎ ููุงูุฉ ุงูุงุดุชุฑุงู ุงููุฏููุน */
      endDate: { type: Date, required: true },

      /* ููุงูุฉ ุงูุนูุฏ ุงููุงูููู (ูุฏ ูุฎุชูู ุนู endDate) */
      contractEndDate: { type: Date, required: true },

      /* ุญุงูุฉ ุงูุงุดุชุฑุงู (ูุดุท / ูููููู ูุฏูููุง) */
      isActive: { type: Boolean, default: true },
    },

    /*--------------------------------------------------
      ๐ domainInfo
      ุชูุงุตูู ุงููุทุงู ุงูููุฏุงุฑ ุถูู ุงูุจุงูุฉ.
    --------------------------------------------------*/
    domainInfo: {
      /* ุฑุงุจุท ุงููููุน ุฃู ุงูุฏูููู ุงูุฑุฆูุณู */
      websiteUrl: { type: String, required: true, unique: true },

      /* ูุชู ุญูุฌุฒ ุงููุทุงู ุฃูู ูุฑุฉ */
      registeredAt: { type: Date, default: Date.now },

      /* ูุชู ุชูุชูู ุตูุงุญูุฉ ุงูุฏูููู ุงูุญุงูู */
      expiresAt: { type: Date, required: true },

      /* ูุฏุฉ ุงูุชุณุฌูู ุจุงูุฃุดูุฑ (ูฆ ุฃู ูกูข ุนุงุฏุฉู) */
      durationMonths: { type: Number, required: true },

      /* ููุน ุดูุงุฏุฉ SSL ุงูููุณุชุฎุฏูุฉ (ุงูุชุฑุงุถู Cloudflare) */
      sslType: { type: String, default: 'Cloudflare Universal' },

      /* ูู ููุฌุฏููุฏ ุงูุฏูููู ุชููุงุฆููุง ูุน ุงูุงุดุชุฑุงูุ */
      autoRenew: { type: Boolean, default: true },
    },
  },
  {
    /* timestamps ููุถูู createdAt ู updatedAt ุชููุงุฆููุง */
    timestamps: true,
  }
);

const SubscriptionPackage = mongoose.model(
    'SubscriptionPackage',
    subscriptionPackageSchema
  );
  
  module.exports = SubscriptionPackage;
  
